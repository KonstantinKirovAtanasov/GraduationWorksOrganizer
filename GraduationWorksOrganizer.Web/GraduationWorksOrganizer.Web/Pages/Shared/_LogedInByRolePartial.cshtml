@using GraduationWorksOrganizer.Common
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.ViewTheses)).Succeeded)
{
    <div class="dropdown">
        <button class="dropbtn">Теми</button>
        <div class="dropdown-content">
            @if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.ViewTheses)).Succeeded)
            {
                <a class="nav-link text-dark" asp-area="GraduationWork" asp-page="/BachelorThesesList" title="Manage">Списък с теми</a>
            }
            @if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.AddTheses)).Succeeded)
            {
                <a class="nav-link text-dark" asp-area="GraduationWork" asp-page="/AddTheses" title="Manage">Добави тема</a>
            }
            @if (User.IsInRole(Constants.RoleNames.StudentRole))
            {
                <a class="nav-link text-dark" asp-area="GraduationWork" asp-page="/MyThesesStudent" title="Manage">Моите теми</a>
            }
            @if (User.IsInRole(Constants.RoleNames.TeacherRole))
            {
                <a class="nav-link text-dark" asp-area="GraduationWork" asp-page="/MyThesesTeacher" title="Manage">Моите теми</a>
            }
        </div>
    </div>
}
@if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.ViewTheses)).Succeeded)
{
    <div class="dropdown">
        <button class="dropbtn">Преподаватели</button>
        <div class="dropdown-content">
            @if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.ViewTheses)).Succeeded)
            {
                <a class="nav-link text-dark" asp-area="Commissions" asp-page="/TeachersList" title="Manage">Списък с преподаватели</a>
            }
        </div>
    </div>
}
@if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.ViewTheses)).Succeeded)
{
    <div class="dropdown">
        <button class="dropbtn">Оценки</button>
        <div class="dropdown-content">
            @if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.AddTheses)).Succeeded)
            {
                <a class="nav-link text-dark" asp-area="Marks" asp-page="/AddMarks">Добави оценка</a>
            }
            @if (User.IsInRole(Constants.RoleNames.StudentRole))
            {
                <a class="nav-link text-dark" asp-area="Marks" asp-page="/MyMarkItemsStudent">Моите оценки</a>
            }
        </div>
    </div>
}
@if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.ViewTheses)).Succeeded)
{
    <div class="dropdown">
        <button class="dropbtn">Дати за защита</button>
        <div class="dropdown-content">
            @if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.AddTheses)).Succeeded)
            {
                <a class="nav-link text-dark" asp-area="Defence" asp-page="/AddDefenceDate">Добави дата</a>
            }
            <a class="nav-link text-dark" asp-area="Defence" asp-page="/DefenceDates">Предстоящи дати</a>
        </div>
    </div>
}
@if (User.IsInRole(Constants.RoleNames.StudentRole))
{
    <div class="dropdown">
        <button class="dropbtn">Архив</button>
        <div class="dropdown-content">
            <a class="nav-link text-dark" asp-area="Reports" asp-page="/EndedThesesArchive">Теми</a>
        </div>
    </div>
}
@if (User.IsInRole(Constants.RoleNames.TeacherRole))
{
    <div class="dropdown">
        <button class="dropbtn">Справки</button>
        <div class="dropdown-content">
            <a class="nav-link text-dark" asp-area="Reports" asp-page="/MarkItemsThesesReport">Оценени Теми</a>
            <a class="nav-link text-dark" asp-area="Reports" asp-page="/ThesesInProcessReport">Теми в процес на работа</a>
            <a class="nav-link text-dark" asp-area="Reports" asp-page="/UpcommingDefencesReport">Предстоящи защити</a>
        </div>
    </div>
}
