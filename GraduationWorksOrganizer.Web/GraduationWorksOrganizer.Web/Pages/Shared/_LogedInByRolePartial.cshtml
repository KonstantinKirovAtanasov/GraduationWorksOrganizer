@using GraduationWorksOrganizer.Common
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.ViewTheses)).Succeeded)
{
    <div class="dropdown">
        <button class="dropbtn">Теми</button>
        <div class="dropdown-content">
            @if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.ViewTheses)).Succeeded)
            {
                <a class="nav-link text-dark" asp-area="GraduationWork" asp-page="/BachelorThesesList" title="Manage">Списък с теми</a>
            }
            @if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.AddTheses)).Succeeded)
            {
                <a class="nav-link text-dark" asp-area="GraduationWork" asp-page="/AddTheses" title="Manage">Добави тема</a>
            }
            @if (User.IsInRole(Constants.RoleNames.StudentRole))
            {
                <a class="nav-link text-dark" asp-area="GraduationWork" asp-page="/MyTheses" title="Manage">Моите теми</a>
            }
            @if (User.IsInRole(Constants.RoleNames.StudentRole))
            {
                <a class="nav-link text-dark" asp-area="GraduationWork" asp-page="/MyTheses" title="Manage">Чакащи теми</a>
            }
        </div>
    </div>
}
@if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.ViewTheses)).Succeeded)
{
    <div class="dropdown">
        <button class="dropbtn">Комисии</button>
        <div class="dropdown-content">
            @if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.ViewTheses)).Succeeded)
            {
                <a class="nav-link text-dark" asp-area="Commissions" asp-page="/CommissionsList" title="Manage">Списък с комисии</a>
            }
            @if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.ApproveTheses)).Succeeded)
            {
                <a class="nav-link text-dark" asp-area="Commissions" asp-page="/CreateCommission" title="Manage">Създай комисия</a>
            }
        </div>
    </div>
}
@if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.ViewTheses)).Succeeded)
{
    <div class="dropdown">
        <button class="dropbtn">Оценки</button>
        <div class="dropdown-content">
            @if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.AddTheses)).Succeeded)
            {
                <a class="nav-link text-dark" asp-area="" asp-page="">Добави оценка</a>
            }
            @if (User.IsInRole(Constants.RoleNames.StudentRole))
            {
                <a class="nav-link text-dark" asp-area="" asp-page="">Моите оценки</a>
            }
        </div>
    </div>
}
@if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.ViewTheses)).Succeeded)
{
    <div class="dropdown">
        <button class="dropbtn">Дати за защита</button>
        <div class="dropdown-content">
            @if ((await AuthorizationService.AuthorizeAsync(User, Constants.PolicyNames.AddTheses)).Succeeded)
            {
                <a class="nav-link text-dark" asp-area="" asp-page="">Добави дата</a>
            }
            @if (User.IsInRole(Constants.RoleNames.StudentRole))
            {
                <a class="nav-link text-dark" asp-area="" asp-page="">Предстоящи дати</a>
            }
        </div>
    </div>
}
