@using Microsoft.AspNetCore.Identity
@inject SignInManager<GraduationWorksOrganizer.Database.Models.Base.ApplicationIdentityBase> SignInManager
@inject UserManager<GraduationWorksOrganizer.Database.Models.Base.ApplicationIdentityBase> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @((await UserManager.GetUserAsync(User)).Name)!</a>
    </li>
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout">
            <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
    }
    else
    {
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/RegisterStudent">RegisterStudent</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/RegisterTeacher">RegisterTeacher</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
    }
</ul>
